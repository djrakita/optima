[package]
name = "optima"
version = "0.0.1"
edition = "2021"
description = "An easy to set up and easy to use toolbox for applied planning and optimization"
keywords = ["robotics", "planning", "optimization", "motion", "kinematics"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/djrakita/optima_toolbox"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
nalgebra = {version="0.30.1", features=["serde-serialize"]}
serde = "1.0.136"
serde_json = "1.0.79"
urdf-rs = "0.6.2"
vfs = { version="0.7.0", features=["embedded-fs"] }
rust-embed = { version="6.2.0", features=["debug-embed", "interpolate-folder-path", "compression", "include-exclude"] }
dae-parser = "0.8.5"
collada = "0.14.0"
stl_io = "0.6.0"
walkdir = "2.3.2"
dirs = "4.0.0"
simba = "0.7.0"
num-traits = "0.2.14"
parry3d-f64 = "0.8.0"
rand = { version="0.8.5" }
rand_distr = "0.4.3"
permutation = "0.4.1"
serde_with = "1.12.1"
rayon = "1.5.2"
getrandom = { version="0.2.6", features=["js"] }
ron = "0.7"
toml = "0.5.9"
instant = { version = "0.1", features = [ "wasm-bindgen" ] }
took = "0.1.2"
took-macro = "0.1"
ordered-float = "3.0.0"
ndarray = "0.15.4"
ndarray_einsum_beta = "0.7.0"
optimization_engine = { version = "0.7.4", features = ["wasm"] }
itertools = "0.10.2"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { version="0.2.79", features = ["serde-serialize"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
pyo3 = { version = "0.16.2", features = ["extension-module"] }
termion = "1.5.6"
pbr = "1.0.4"
nlopt = "0.5.4"

[features]
default = [ "do_not_embed_assets" ] # NOTE!  To turn off, must include --no-default-features.
do_not_embed_assets = [ "exclude_all_robot_asset_embedding" ]
only_use_embedded_assets = [] # NOTE!  This will only work if you include --no-default-features.
exclude_all_robot_asset_embedding = []
exclude_robot_visual_meshes_embedding = []
# ----------- robot embeddeding groups -------- #
all_robots = ["robot_group_3", "fetch"]
robot_group_3 = ["robot_group_2", "hubo"]
robot_group_2 = ["robot_group_1", "sawyer"]
robot_group_1 = ["ur5"]
# ----------- robots -------------------------- #
ur5 = []
sawyer = []
fetch = []
hubo = []

[lib]
name = "optima"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[package.metadata.docs.rs]
targets = ["x86_64-apple-darwin", "wasm32-unknown-unknown"]
# rustdoc-args = [ "--html-in-header", "./src/docs-header.html" ]

[profile.dev]
opt-level = 2

[profile.release]
opt-level = 3